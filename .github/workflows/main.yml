name: Main workflow

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  OCTOPUS_URL: ${{ vars.OCTOPUS_SERVER_URL }}
  OCTOPUS_APIKEY: ${{ secrets.OCTOPUS_API_KEY }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

jobs:
  collect-tenants:
    name: Collect tenants
    runs-on: ubuntu-latest
    
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: echo "::set-output name=matrix::$(ls tenants/**/tenant/main.tf | jq -R -s -c 'split("\n")[:-1]')"

  check:
    needs: [ collect-tenants ]
    runs-on: ubuntu-latest
    strategy:
        matrix:
            value: ${{ fromJson(needs.collect-tenants.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
           terraform_version: 1.5.3

      - name: Terraform plan
        run: |
          file="${{ matrix.value }}"
          tenant_dir=$(dirname $file)

          cd $tenant_dir
          terraform init
          terraform plan -json -no-color -detailed-exitcode > out.json
          changed=$?
          line=$(tail -n 5 ./out.json | head -n 1)
          echo "changed = $changed"
          echo "line = $line"
          added=$(echo $line | jq '.changes.add')
          echo "added = $added"
